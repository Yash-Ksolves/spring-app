apiVersion: v1
kind: ConfigMap
metadata:
  name: mysqldb-config
data:
  MYSQL_ROOT_PASSWORD: yash
  MYSQL_DATABASE: test
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysqldb
spec:
  serviceName: mysqldb
  replicas: 1
  selector:
    matchLabels:
      app: mysqldb
  template:
    metadata:
      labels:
        app: mysqldb
    spec:
      containers:
        - name: mysqldb
          image: mysql:5.7
          envFrom:
            - configMapRef:
                name: mysqldb-config
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-data
          hostPath:
            path: /opt/db
---
apiVersion: v1
kind: Service
metadata:
  name: mysqldb
spec:
  selector:
    app: mysqldb
  ports:
    - protocol: TCP
      port: 3306
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spring-config
data:
  application.properties: |
    spring.datasource.url=jdbc:mysql://mysqldb:3306/test?useSSL=false
    spring.datasource.username=root
    spring.datasource.password=yash
    spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
    spring.jpa.hibernate.ddl-auto=update
    spring.sql.init.mode=always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: yashchouhan/backend:13
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: spring-config
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  type: NodePort
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: yashchouhan/frontend:13
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30001
---
